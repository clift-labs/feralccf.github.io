"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5125],{3905:(e,n,o)=>{o.d(n,{Zo:()=>c,kt:()=>m});var t=o(7294);function a(e,n,o){return n in e?Object.defineProperty(e,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[n]=o,e}function r(e,n){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),o.push.apply(o,t)}return o}function i(e){for(var n=1;n<arguments.length;n++){var o=null!=arguments[n]?arguments[n]:{};n%2?r(Object(o),!0).forEach((function(n){a(e,n,o[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(o,n))}))}return e}function d(e,n){if(null==e)return{};var o,t,a=function(e,n){if(null==e)return{};var o,t,a={},r=Object.keys(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||(a[o]=e[o]);return a}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)o=r[t],n.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(a[o]=e[o])}return a}var l=t.createContext({}),s=function(e){var n=t.useContext(l),o=n;return e&&(o="function"==typeof e?e(n):i(i({},n),e)),o},c=function(e){var n=s(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},f=t.forwardRef((function(e,n){var o=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),p=s(o),f=a,m=p["".concat(l,".").concat(f)]||p[f]||u[f]||r;return o?t.createElement(m,i(i({ref:n},c),{},{components:o})):t.createElement(m,i({ref:n},c))}));function m(e,n){var o=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var r=o.length,i=new Array(r);i[0]=f;var d={};for(var l in n)hasOwnProperty.call(n,l)&&(d[l]=n[l]);d.originalType=e,d[p]="string"==typeof e?e:a,i[1]=d;for(var s=2;s<r;s++)i[s]=o[s];return t.createElement.apply(null,i)}return t.createElement.apply(null,o)}f.displayName="MDXCreateElement"},4837:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>r,metadata:()=>d,toc:()=>s});var t=o(7462),a=(o(7294),o(3905));const r={id:"nodes-index",title:"Nodes"},i=void 0,d={unversionedId:"nodes/nodes-index",id:"nodes/nodes-index",title:"Nodes",description:"Multiple parts to a Node",source:"@site/docs/nodes/index.md",sourceDirName:"nodes",slug:"/nodes/",permalink:"/docs/nodes/",draft:!1,tags:[],version:"current",frontMatter:{id:"nodes-index",title:"Nodes"},sidebar:"tutorialSidebar",previous:{title:"Process Override",permalink:"/docs/processes/process-override"},next:{title:"NodeCode",permalink:"/docs/nodes/node-code/"}},l={},s=[{value:"Multiple parts to a Node",id:"multiple-parts-to-a-node",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Hierarchy",id:"hierarchy",level:2}],c={toc:s},p="wrapper";function u(e){let{components:n,...o}=e;return(0,a.kt)(p,(0,t.Z)({},c,o,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"multiple-parts-to-a-node"},"Multiple parts to a Node"),(0,a.kt)("p",null,"Nodes are the base of a process's functionality. Nodes are are composed of three levels\nof configuration and functionality. The base level is the ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode")," which contains the\nfunctionality of the node and defines the configuration and possible return values.\n",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNodes")," apply configuration for the ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode")," and are available in the catalog\nfor a process to use. A ",(0,a.kt)("inlineCode",{parentName:"p"},"ProcessNode")," is the highest level of configuration and is added\nto a process."),(0,a.kt)("mermaid",{value:"erDiagram\n    PROCESS_NODE ||--|{ CATALOG_NODE : is-a\n    CATALOG_NODE ||--|{ NODE_CODE : is-a"}),(0,a.kt)("h2",{id:"configuration"},"Configuration"),(0,a.kt)("p",null,"Nodes are a hierarchy of configuration that is compiled and nodes which include processing\ncode based on the configuration."),(0,a.kt)("mermaid",{value:"flowchart LR\n    ProcessNoode --\x3e|Configuration| CatalogNode\n    CatalogNode --\x3e|Configuration| NodeCode\n "}),(0,a.kt)("admonition",{type:"caution"},(0,a.kt)("p",{parentName:"admonition"},"A ",(0,a.kt)("inlineCode",{parentName:"p"},"ProcessNode")," configuration cannot override a ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNode")," configuration. If there is\na configuration collision (same configuration key) then the ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNode")," configuration value\nwill be used."),(0,a.kt)("mermaid",{parentName:"admonition",value:"flowchart LR\n    ProcessNoode --\x3e|Configuration a:1, c:2| CatalogNode\n    CatalogNode --\x3e|Configuration a:3, b:4| NodeCode"}),(0,a.kt)("p",{parentName:"admonition"},"In this example the final configuration would be ",(0,a.kt)("inlineCode",{parentName:"p"},"a:3, b:4, c:2")," as the ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNode")," configuration\nfor a would take precedence over the ",(0,a.kt)("inlineCode",{parentName:"p"},"ProcessNodes")," value for a.")),(0,a.kt)("p",null,"To see configuration options ",(0,a.kt)("a",{parentName:"p",href:"/docs/nodes/node-code#nodecode-configuration"},"See NodeCode:Configuration")),(0,a.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,a.kt)("p",null,"A ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode")," can have multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNodes")," that supply different configurations\nto the underlying ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode"),". In turn, each ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNode")," can have multiple ",(0,a.kt)("inlineCode",{parentName:"p"},"ProcessNodes"),"\nwhich can supply more configuration to the ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode"),"."),(0,a.kt)("p",null,"This hierarchy of code allows easy reuse of the ",(0,a.kt)("inlineCode",{parentName:"p"},"NodeCode")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"CatalogNodes"),"."),(0,a.kt)("mermaid",{value:"erDiagram\nNODEA ||--|{ GREATER_THAN_ZERO : is-a\nNODEB ||--|{ GREATER_THAN_ZERO : is-a\nNODEC ||--|{ LESS_THAN_ZERO : is-a\nNODED ||--|{ LESS_THAN_ZERO : is-a\nNODEE ||--|{ IS_ZERO : is-a\nNODEF ||--|{ IS_ZERO : is-a\nGREATER_THAN_ZERO ||--|{ EVALUATE : is-a\nLESS_THAN_ZERO ||--|{ EVALUATE : is-a\nIS_ZERO ||--|{ EVALUATE : is-a"}))}u.isMDXComponent=!0}}]);