"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5708],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),d=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=d(n),f=r,g=p["".concat(l,".").concat(f)]||p[f]||u[f]||a;return n?o.createElement(g,i(i({ref:t},c),{},{components:n})):o.createElement(g,i({ref:t},c))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,i=new Array(a);i[0]=f;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:r,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9882:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5,title:"http_data",tags:["Category:Data","Package:Core"]},i=void 0,s={unversionedId:"nodes/node-code/JsonDecodeNodeCode",id:"nodes/node-code/JsonDecodeNodeCode",title:"http_data",description:"Decode a JSON string into an array. The default get context path is _results and the",source:"@site/docs/nodes/node-code/JsonDecodeNodeCode.md",sourceDirName:"nodes/node-code",slug:"/nodes/node-code/JsonDecodeNodeCode",permalink:"/docs/nodes/node-code/JsonDecodeNodeCode",draft:!1,tags:[{label:"Category:Data",permalink:"/docs/tags/category-data"},{label:"Package:Core",permalink:"/docs/tags/package-core"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"http_data",tags:["Category:Data","Package:Core"]},sidebar:"tutorialSidebar",previous:{title:"http_data",permalink:"/docs/nodes/node-code/HttpDataNodeCode"},next:{title:"json_encode",permalink:"/docs/nodes/node-code/JsonEncodeNodeCode"}},l={},d=[{value:"Key",id:"key",level:2},{value:"Configuration Keys:",id:"configuration-keys",level:2},{value:"Results",id:"results",level:2},{value:"Process Method",id:"process-method",level:2},{value:"Catalog Node Decorators",id:"catalog-node-decorators",level:2}],c={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Decode a JSON string into an array. The default get context path is ",(0,r.kt)("inlineCode",{parentName:"p"},"_results")," and the\ndefault results path is ",(0,r.kt)("inlineCode",{parentName:"p"},"_data"),"."),(0,r.kt)("h2",{id:"key"},"Key"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"json_decode")),(0,r.kt)("h2",{id:"configuration-keys"},"Configuration Keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context_path")," - The path in the context to store the resulting array"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get_context_path")," - The path where the JSON string is found")),(0,r.kt)("h2",{id:"results"},"Results"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ok")," - The arithmetic operation has been run and the results added to the context")),(0,r.kt)("h2",{id:"process-method"},"Process Method"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},'public function process(ContextInterface $context): ResultInterface\n{\n    $contextPath = $this->getRequiredConfigurationValue(self::CONTEXT_PATH, self::DEFAULT_CONTEXT_PATH);\n    $getContextPath = $this->getRequiredConfigurationValue(self::GET_CONTEXT_PATH, self::DEFAULT_GET_CONTEXT_PATH);\n\n    $jsonString = $this->getStringValueFromContext($getContextPath, $context);\n    $arrayData = json_decode($jsonString, true);\n    $this->setValueInContext(self::CONTEXT_PATH, $arrayData, $context);\n\n    return $this->result(\n        ResultInterface::OK,\n        \'Converted string data from path "%s" and placed in path "%s"\',\n        [$getContextPath, $contextPath]\n    );\n}\n')),(0,r.kt)("h2",{id:"catalog-node-decorators"},"Catalog Node Decorators"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"[CatalogNodeDecorator(key:'json_encode', name: 'JSON Encode', group: 'Data', description: 'Convert an array to a JSON string.')]\n")))}u.isMDXComponent=!0}}]);