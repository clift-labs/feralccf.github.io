"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3155],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=o.createContext({}),u=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=u(e.components);return o.createElement(s.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},f=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,y=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return n?o.createElement(y,l(l({ref:t},c),{},{components:n})):o.createElement(y,l({ref:t},c))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<a;u++)l[u]=n[u];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}f.displayName="MDXCreateElement"},8998:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>u});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:5,title:"set_context_value",tags:["Category:Data","Package:Core"]},l=void 0,i={unversionedId:"nodes/node-code/SetContextValueNodeCode",id:"nodes/node-code/SetContextValueNodeCode",title:"set_context_value",description:"Set the value of a context key to a configured value. To set a deep reference the parent object|array must exist.",source:"@site/docs/nodes/node-code/SetContextValueNodeCode.md",sourceDirName:"nodes/node-code",slug:"/nodes/node-code/SetContextValueNodeCode",permalink:"/docs/nodes/node-code/SetContextValueNodeCode",draft:!1,tags:[{label:"Category:Data",permalink:"/docs/tags/category-data"},{label:"Package:Core",permalink:"/docs/tags/package-core"}],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5,title:"set_context_value",tags:["Category:Data","Package:Core"]},sidebar:"tutorialSidebar",previous:{title:"set_context_table",permalink:"/docs/nodes/node-code/SetContextTableNodeCode"},next:{title:"start",permalink:"/docs/nodes/node-code/StartProcessingNodeCode"}},s={},u=[{value:"Key",id:"key",level:2},{value:"Configuration Keys:",id:"configuration-keys",level:2},{value:"Value Type Options",id:"value-type-options",level:3},{value:"Results",id:"results",level:2},{value:"Process Method",id:"process-method",level:2}],c={toc:u},d="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(d,(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Set the value of a context key to a configured value. To set a deep reference the parent object|array must exist."),(0,r.kt)("h2",{id:"key"},"Key"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"set_context_value")),(0,r.kt)("h2",{id:"configuration-keys"},"Configuration Keys:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value"),"  - The value added to the context"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"context_path")," - The key in the context that will be set"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"value_type")," - The type of var to place into the context")),(0,r.kt)("h3",{id:"value-type-options"},"Value Type Options"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"'string'"),(0,r.kt)("li",{parentName:"ul"},"'int'"),(0,r.kt)("li",{parentName:"ul"},"'float'")),(0,r.kt)("h2",{id:"results"},"Results"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ok")," - The message has been logged")),(0,r.kt)("h2",{id:"process-method"},"Process Method"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-php"},"public function process(ContextInterface $context): ResultInterface\n{\n    $valueType = $this->getRequiredConfigurationValue(self::VALUE_TYPE, self::OPTION_STRING);\n    $value = $this->getRequiredConfigurationValue(self::VALUE);\n    $contextPath = $this->getRequiredConfigurationValue(self::CONTEXT_PATH);\n\n    $value = match ($valueType) {\n        self::OPTION_STRING => (string)$value,\n        self::OPTION_INT => (int)$value,\n        self::OPTION_FLOAT => (float)$value,\n        default => throw new Exception(sprintf('Unknown type \"%s\".', $valueType)),\n    };\n\n    $this->setValueInContext($contextPath, $value, $context);\n\n    return $this->result(\n        ResultInterface::OK,\n        'Set value in context path \"%s\".',\n        [$contextPath]\n    );\n}\n")))}p.isMDXComponent=!0}}]);