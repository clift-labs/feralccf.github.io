"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7808],{3905:(e,r,t)=>{t.d(r,{Zo:()=>l,kt:()=>f});var o=t(7294);function n(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function s(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,o)}return t}function a(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?s(Object(t),!0).forEach((function(r){n(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,o,n=function(e,r){if(null==e)return{};var t,o,n={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],r.indexOf(t)>=0||(n[t]=e[t]);return n}(e,r);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(n[t]=e[t])}return n}var i=o.createContext({}),p=function(e){var r=o.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):a(a({},r),e)),t},l=function(e){var r=p(e.components);return o.createElement(i.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return o.createElement(o.Fragment,{},r)}},O=o.forwardRef((function(e,r){var t=e.components,n=e.mdxType,s=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),u=p(t),O=n,f=u["".concat(i,".").concat(O)]||u[O]||d[O]||s;return t?o.createElement(f,a(a({ref:r},l),{},{components:t})):o.createElement(f,a({ref:r},l))}));function f(e,r){var t=arguments,n=r&&r.mdxType;if("string"==typeof e||n){var s=t.length,a=new Array(s);a[0]=O;var c={};for(var i in r)hasOwnProperty.call(r,i)&&(c[i]=r[i]);c.originalType=e,c[u]="string"==typeof e?e:n,a[1]=c;for(var p=2;p<s;p++)a[p]=t[p];return o.createElement.apply(null,a)}return o.createElement.apply(null,t)}O.displayName="MDXCreateElement"},3610:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>i,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var o=t(7462),n=(t(7294),t(3905));const s={sidebar_position:3,title:"Process Override"},a=void 0,c={unversionedId:"processes/process-override",id:"processes/process-override",title:"Process Override",description:"A Process override is a process configuration that can alter a process configuration.",source:"@site/docs/processes/process-override.md",sourceDirName:"processes",slug:"/processes/process-override",permalink:"/docs/processes/process-override",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Process Override"},sidebar:"tutorialSidebar",previous:{title:"JSON Hydrator",permalink:"/docs/processes/json-hydrator"},next:{title:"Nodes",permalink:"/docs/nodes/"}},i={},p=[],l={toc:p},u="wrapper";function d(e){let{components:r,...t}=e;return(0,n.kt)(u,(0,o.Z)({},l,t,{components:r,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"A Process override is a process configuration that can alter a process configuration.\nWith a process override you can add new ProcessNodes, modify ProcessNodes, or delete\nProcessNodes before the process is run. These overrides make it possible to have a\nbase process then have custom processes based on other factors like customer, locale,\ntime, or other factors."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Base Process")),(0,n.kt)("mermaid",{value:"graph LR;\n    NODE_A--\x3e|true|NODE_B;\n    NODE_A--\x3e|false|NODE_C;\n    NODE_B--\x3e|ok|NODE_D;\n    NODE_C--\x3e|ok|NODE_D;"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Override")),(0,n.kt)("p",null,"Our override will delete NODE_B. Then add NODE_E and change\nthe edges of NODE_A true result to map to NODE_E."),(0,n.kt)("mermaid",{value:"graph LR;\n    NODE_B-DELETE\n    NODE_A--\x3e|true|NODE_E;\n    NODE_E--\x3e|ok|NODE_D;"}),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Resulting Process")),(0,n.kt)("p",null,"The resulting process will include the changes from the override and apply\nthose to the base process. Here you can see the change from NODE_A to NODE_E\nand then to NODE_D."),(0,n.kt)("mermaid",{value:"graph LR;\n    NODE_A--\x3e|true|NODE_E;\n    NODE_A--\x3e|false|NODE_C;\n    NODE_E--\x3e|ok|NODE_D;\n    NODE_C--\x3e|ok|NODE_D;"}))}d.isMDXComponent=!0}}]);