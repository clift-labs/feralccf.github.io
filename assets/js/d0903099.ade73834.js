"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8661],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>O});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),d=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=d(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=d(n),f=o,O=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(O,s(s({ref:t},l),{},{components:n})):r.createElement(O,s({ref:t},l))}));function O(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,s[1]=i;for(var d=2;d<a;d++)s[d]=n[d];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},1210:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>d});var r=n(7462),o=(n(7294),n(3905));const a={id:"edges-index",title:"Edges"},s=void 0,i={unversionedId:"edges/edges-index",id:"edges/edges-index",title:"Edges",description:"Edges connect nodes together. Each node can have one to many results based on what's",source:"@site/docs/edges/index.md",sourceDirName:"edges",slug:"/edges/",permalink:"/docs/edges/",draft:!1,tags:[],version:"current",frontMatter:{id:"edges-index",title:"Edges"},sidebar:"tutorialSidebar",previous:{title:"Process Node",permalink:"/docs/nodes/process-node"},next:{title:"Results",permalink:"/docs/results/"}},c={},d=[{value:"What if",id:"what-if",level:2}],l={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Edges connect nodes together. Each node can have one to many results based on what's\nreturned from the ",(0,o.kt)("inlineCode",{parentName:"p"},"NodeCode"),". "),(0,o.kt)("p",null,"In this example NODE_A has 6 edges which connect NODE_A to nodes NODE_B...NODE_G based on\nresults of NODE_A. This example uses shorthand for comparing two variables. The shorthand\nfor ",(0,o.kt)("inlineCode",{parentName:"p"},"gt")," is Greater Than. The shorthand for ",(0,o.kt)("inlineCode",{parentName:"p"},"gte")," is Greater Than or Equal. You get the\npicture."),(0,o.kt)("mermaid",{value:"graph LR;\n    NODE_A--\x3e|gt|NODE_B;\n    NODE_A--\x3e|gte|NODE_C;\n    NODE_A--\x3e|lt|NODE_D;\n    NODE_A--\x3e|lte|NODE_E;\n    NODE_A--\x3e|eq|NODE_F;\n    NODE_A--\x3e|not|NODE_G;\n    NODE_B--\x3e|ok|NODE_X;\n    NODE_C--\x3e|ok|NODE_X;\n    NODE_D--\x3e|ok|NODE_X;\n    NODE_E--\x3e|ok|NODE_X;\n    NODE_F--\x3e|ok|NODE_X;\n    NODE_G--\x3e|ok|NODE_X;"}),(0,o.kt)("h2",{id:"what-if"},"What if"),(0,o.kt)("p",null,"What if a NodeCode result doesn't map to an edge. This is an invalid process and an error\nshould be thrown during validation."))}u.isMDXComponent=!0}}]);