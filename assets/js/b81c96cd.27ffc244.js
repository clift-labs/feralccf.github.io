"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3742],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var i=r.createContext({}),p=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(i.Provider,{value:t},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,h=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return n?r.createElement(h,a(a({ref:t},c),{},{components:n})):r.createElement(h,a({ref:t},c))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,a=new Array(s);a[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l[m]="string"==typeof e?e:o,a[1]=l;for(var p=2;p<s;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2594:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const s={sidebar_position:3,id:"inline-sample",title:"Feral Inline Sample Project"},a=void 0,l={unversionedId:"getting-started/inline-sample",id:"getting-started/inline-sample",title:"Feral Inline Sample Project",description:"Inline Sample Project",source:"@site/docs/getting-started/inline-sample.md",sourceDirName:"getting-started",slug:"/getting-started/inline-sample",permalink:"/docs/getting-started/inline-sample",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"inline-sample",title:"Feral Inline Sample Project"},sidebar:"tutorialSidebar",previous:{title:"Quick Start Using Docker",permalink:"/docs/getting-started/quick-start-with-docker"},next:{title:"Processes",permalink:"/docs/processes/"}},i={},p=[{value:"Inline Sample Project",id:"inline-sample-project",level:2},{value:"Step 1: Visit the GitHub project",id:"step-1-visit-the-github-project",level:3},{value:"Step 2: Sample Processes",id:"step-2-sample-processes",level:3},{value:"Step 3: Run processes from the command line",id:"step-3-run-processes-from-the-command-line",level:3},{value:"Step 4: Run the processes from the controller",id:"step-4-run-the-processes-from-the-controller",level:3},{value:"The power of a process",id:"the-power-of-a-process",level:2}],c={toc:p},m="wrapper";function u(e){let{components:t,...s}=e;return(0,o.kt)(m,(0,r.Z)({},c,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"inline-sample-project"},"Inline Sample Project"),(0,o.kt)("p",null,"We created a sample project that includes multiple processes and examples. The sample project uses Symfony as a framework and has the ability to run a process from the console and also from the browser via a container. "),(0,o.kt)("h3",{id:"step-1-visit-the-github-project"},"Step 1: Visit the GitHub project"),(0,o.kt)("p",null,"The GitHub project can be found at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/cybermantix/feral-inline-sample"},"https://github.com/cybermantix/feral-inline-sample"),"."),(0,o.kt)("h3",{id:"step-2-sample-processes"},"Step 2: Sample Processes"),(0,o.kt)("details",null,(0,o.kt)("summary",null,"Available Example Processes"),(0,o.kt)("div",null,(0,o.kt)("div",null,"Here is a list of the processes available in the sample app"),(0,o.kt)("br",null),(0,o.kt)("ul",null,(0,o.kt)("li",null,"api_data_import"),(0,o.kt)("li",null,"random_evaluation"),(0,o.kt)("li",null,"simple_math_with_context"),(0,o.kt)("li",null,"simple_math"),(0,o.kt)("li",null,"system_random"),(0,o.kt)("li",null,"test_process")))),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"Sample Process Graphs",src:n(8727).Z,title:"Sample Process Graphs",width:"1184",height:"1426"})),(0,o.kt)("h3",{id:"step-3-run-processes-from-the-command-line"},"Step 3: Run processes from the command line"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"bin/console feral:run  random_evaluation -vv\n")),(0,o.kt)("p",null,"Output"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"Process Key: random_evaluation\n-----------\n  CONTEXT\n-----------\nContext:  was not passed in.\n-----------\n  PROCESS\n-----------\n[info] Starting a process with 6 nodes.\n[info] Processing Node start\n[info] Processing Node set_system_random\n[info] Processing Node evaluate\n[info] Processing Node info_greater\n[info] The system random is 0.99985052412369 and is GREATER than the test value 0.5\n[info] Processing Node stop\n[info] Process Complete\n------------\n  FINALIZE\n------------\nProcess 'random_evaluation' Complete.\n")),(0,o.kt)("h3",{id:"step-4-run-the-processes-from-the-controller"},"Step 4: Run the processes from the controller"),(0,o.kt)("p",null,"In your browser, visit the your development web server or container ",(0,o.kt)("inlineCode",{parentName:"p"},"http://localhost:8081/"),"\nClick on the title of the process ",(0,o.kt)("inlineCode",{parentName:"p"},"random_evaluation"),".\n",(0,o.kt)("img",{alt:"Output of the random evaluation process",src:n(6655).Z,title:"Random evaluation process HTML output",width:"1026",height:"594"})),(0,o.kt)("h2",{id:"the-power-of-a-process"},"The power of a process"),(0,o.kt)("p",null,"Note the exact same process can be run via the command line console or in a controller in a browser. This allows you to write the process once and run it with multiple drivers like the console or web controller.\n",(0,o.kt)("img",{alt:"Feral Process Profiler",src:n(2541).Z,title:"Symfony Profiler",width:"1264",height:"1598"})))}u.isMDXComponent=!0},2541:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/random_evaluation_profiler-d13c4a01a66c71eb6b468f9897ce7530.png"},6655:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/random_evaluation_via_controller-d0082456957c155b3e13cb8730cab3f1.png"},8727:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/sample-process-graphs-1282cc7c9724f76688425b77433c6627.png"}}]);