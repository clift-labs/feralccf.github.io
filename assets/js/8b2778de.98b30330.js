"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7634],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>v});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),l=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=l(e.components);return n.createElement(i.Provider,{value:t},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(r),d=o,v=u["".concat(i,".").concat(d)]||u[d]||f[d]||a;return r?n.createElement(v,s(s({ref:t},p),{},{components:r})):n.createElement(v,s({ref:t},p))}));function v(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=d;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c[u]="string"==typeof e?e:o,s[1]=c;for(var l=2;l<a;l++)s[l]=r[l];return n.createElement.apply(null,s)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3448:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>s,default:()=>f,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=r(7462),o=(r(7294),r(3905));const a={id:"events-index",title:"Events"},s=void 0,c={unversionedId:"events/events-index",id:"events/events-index",title:"Events",description:"There are several events dispatched in the life of a process. There is a start",source:"@site/docs/events/index.md",sourceDirName:"events",slug:"/events/",permalink:"/docs/events/",draft:!1,tags:[],version:"current",frontMatter:{id:"events-index",title:"Events"},sidebar:"tutorialSidebar",previous:{title:"Context",permalink:"/docs/context/"},next:{title:"Symfony Profiler",permalink:"/docs/symfony-profiler/"}},i={},l=[],p={toc:l},u="wrapper";function f(e){let{components:t,...r}=e;return(0,o.kt)(u,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"There are several events dispatched in the life of a process. There is a start\nand end process events that can be observed for managing processes themselves. There\nare before and after node events that gets dispatched for each node. These can be\nused for cycle detection, debugging, or telemetry."),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/cybermantix/feral-core/tree/master/src/Process/Event"},"Events Namespace")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"ProcessEndEvent"),(0,o.kt)("li",{parentName:"ul"},"ProcessExceptionEvent"),(0,o.kt)("li",{parentName:"ul"},"ProcessNodeAfterEvent"),(0,o.kt)("li",{parentName:"ul"},"ProcessNodeBeforeEvent"),(0,o.kt)("li",{parentName:"ul"},"ProcessNodeNotifyEvent"),(0,o.kt)("li",{parentName:"ul"},"ProcessStartEvent")))}f.isMDXComponent=!0}}]);